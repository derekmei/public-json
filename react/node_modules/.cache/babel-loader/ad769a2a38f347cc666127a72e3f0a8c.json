{"ast":null,"code":"var _jsxFileName = \"/Users/derek/Desktop/org-chart/react/src/OrgChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useRef, useEffect } from \"react\";\nimport TreeChart from \"d3-org-chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrgChartComponent = (props, ref) => {\n  _s();\n\n  const d3Container = useRef(null);\n  let chart = null;\n\n  function addNode(node) {\n    chart.addNode(node);\n  }\n\n  props.setClick(addNode); // We need to manipulate DOM\n\n  useLayoutEffect(() => {\n    if (props.data && d3Container.current) {\n      if (!chart) {\n        chart = new TreeChart();\n      }\n\n      chart.container(d3Container.current).data(props.data).svgWidth(500).initialZoom(0.4).onNodeClick(d => {\n        console.log(d + \" node clicked\");\n        console.log(\"props\", Object.keys(props), d);\n        props.onNodeClick(d);\n      }).render();\n    }\n  }, [props.data, d3Container.current]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: d3Container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrgChartComponent, \"lU223dwkUbyYaNNzSA5ipgSwL8U=\");\n\n_c = OrgChartComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrgChartComponent\");","map":{"version":3,"sources":["/Users/derek/Desktop/org-chart/react/src/OrgChart.js"],"names":["React","useLayoutEffect","useRef","useEffect","TreeChart","OrgChartComponent","props","ref","d3Container","chart","addNode","node","setClick","data","current","container","svgWidth","initialZoom","onNodeClick","d","console","log","Object","keys","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,MAAjC,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AAC/C,QAAMC,WAAW,GAAGN,MAAM,CAAC,IAAD,CAA1B;AACA,MAAIO,KAAK,GAAG,IAAZ;;AAEA,WAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACrBF,IAAAA,KAAK,CAACC,OAAN,CAAcC,IAAd;AACD;;AAGDL,EAAAA,KAAK,CAACM,QAAN,CAAeF,OAAf,EAT+C,CAW/C;;AACAT,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAIK,KAAK,CAACO,IAAN,IAAcL,WAAW,CAACM,OAA9B,EAAuC;AACrC,UAAI,CAACL,KAAL,EAAY;AACVA,QAAAA,KAAK,GAAG,IAAIL,SAAJ,EAAR;AACD;;AACDK,MAAAA,KAAK,CACFM,SADH,CACaP,WAAW,CAACM,OADzB,EAEGD,IAFH,CAEQP,KAAK,CAACO,IAFd,EAGGG,QAHH,CAGY,GAHZ,EAIGC,WAJH,CAIe,GAJf,EAKGC,WALH,CAKeC,CAAC,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,GAAG,eAAhB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,MAAM,CAACC,IAAP,CAAYjB,KAAZ,CAArB,EAAyCa,CAAzC;AACAb,QAAAA,KAAK,CAACY,WAAN,CAAkBC,CAAlB;AACD,OATH,EAUGK,MAVH;AAWD;AACF,GAjBc,EAiBZ,CAAClB,KAAK,CAACO,IAAP,EAAaL,WAAW,CAACM,OAAzB,CAjBY,CAAf;AAmBA,sBACE;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEN;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApCM;;GAAMH,iB;;KAAAA,iB","sourcesContent":["import React, { useLayoutEffect, useRef, useEffect } from \"react\";\nimport TreeChart from \"d3-org-chart\";\n\nexport const OrgChartComponent = (props, ref) => {\n  const d3Container = useRef(null);\n  let chart = null;\n\n  function addNode(node) {\n    chart.addNode(node);\n  }\n\n\n  props.setClick(addNode);\n\n  // We need to manipulate DOM\n  useLayoutEffect(() => {\n    if (props.data && d3Container.current) {\n      if (!chart) {\n        chart = new TreeChart();\n      }\n      chart\n        .container(d3Container.current)\n        .data(props.data)\n        .svgWidth(500)\n        .initialZoom(0.4)\n        .onNodeClick(d => {\n          console.log(d + \" node clicked\");\n          console.log(\"props\", Object.keys(props), d);\n          props.onNodeClick(d);\n        })\n        .render();\n    }\n  }, [props.data, d3Container.current]);\n\n  return (\n    <div>\n      <div ref={d3Container} />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}